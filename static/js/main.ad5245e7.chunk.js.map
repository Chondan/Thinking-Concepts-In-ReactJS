{"version":3,"sources":["components/ThinkingInReact/index.js","index.js"],"names":["products","category","price","stocked","name","FilterableProductTable","props","state","searchValue","filterValue","handleChange","bind","e","target","value","type","checked","this","setState","className","SearchBar","onChange","checkboxValue","ProductTable","React","Component","placeholder","searchAndFilterProducts","filter","product","toLowerCase","search","categories","Set","map","rows","forEach","push","ProductCategoryRow","categoryName","key","ProductRow","colSpan","toString","App","ThinkingInReact","ReactDOM","render","document","getElementById"],"mappings":"4QAGMA,G,MAAW,CACb,CAACC,SAAU,iBAAkBC,MAAO,SAAUC,SAAS,EAAMC,KAAM,YACnE,CAACH,SAAU,iBAAkBC,MAAO,QAASC,SAAS,EAAMC,KAAM,YAClE,CAACH,SAAU,iBAAkBC,MAAO,SAAUC,SAAS,EAAOC,KAAM,cACpE,CAACH,SAAU,cAAeC,MAAO,SAAUC,SAAS,EAAMC,KAAM,cAChE,CAACH,SAAU,cAAeC,MAAO,UAAWC,SAAS,EAAOC,KAAM,YAClE,CAACH,SAAU,cAAeC,MAAO,UAAWC,SAAS,EAAMC,KAAM,aAE/DC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,YAAa,GACbC,aAAa,GAEjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANL,E,yDAQNC,GAAI,IAAD,EACgBA,EAAEC,OAAxBT,EADM,EACNA,KAAMU,EADA,EACAA,MACZA,EAAiB,aAFL,EACOC,KACWH,EAAEC,OAAOG,QAAUF,EACjDG,KAAKC,SAAL,eACKd,EAAOU,M,+BAIZ,OACI,yBAAKK,UAAU,4BACX,kBAACC,EAAD,CAAWC,SAAUJ,KAAKP,aAAcF,YAAaS,KAAKV,MAAMC,YAAac,cAAeL,KAAKV,MAAME,cACvG,kBAACc,EAAD,CAAcvB,SAAUA,EAAUQ,YAAaS,KAAKV,MAAMC,YAAac,cAAeL,KAAKV,MAAME,mB,GApB5Ee,IAAMC,WA0B3C,SAASL,EAAUd,GACf,OACI,yBAAKa,UAAU,cACX,2BAAOf,KAAK,cAAcW,KAAK,OAAOW,YAAY,YAAYL,SAAUf,EAAMe,WAC9E,yBAAKF,UAAU,iBACX,2BAAOf,KAAK,cAAcW,KAAK,WAAWC,QAASV,EAAMgB,cAAeD,SAAUf,EAAMe,WACxF,+DAKhB,SAASE,EAAajB,GAElB,IAAME,EAAcF,EAAME,YACpBC,EAAcH,EAAMgB,cAEpBK,EADWrB,EAAMN,SACkB4B,QAAO,SAAAC,GAC5C,OAAIpB,GACyE,IAAlEoB,EAAQzB,KAAK0B,cAAcC,OAAOvB,EAAYsB,gBAAyBD,EAAQ1B,SAEjB,IAAlE0B,EAAQzB,KAAK0B,cAAcC,OAAOvB,EAAYsB,kBAGnDE,EAAU,YAAO,IAAIC,IAAIN,EAAwBO,KAAI,SAAAL,GACvD,OAAOA,EAAQ5B,cAEbkC,EAAO,GAQb,OAPAH,EAAWI,SAAQ,SAAAnC,GACfkC,EAAKE,KAAK,kBAACC,EAAD,CAAoBC,aAActC,EAAUuC,IAAKvC,KAC/C0B,EAAwBC,QAAO,SAAAC,GAAO,OAAIA,EAAQ5B,WAAaA,KACvEmC,SAAQ,SAAAP,GACRM,EAAKE,KAAK,kBAACI,EAAD,CAAYrC,KAAMyB,EAAQzB,KAAMF,MAAO2B,EAAQ3B,MAAOC,QAAS0B,EAAQ1B,QAASqC,IAAKX,EAAQzB,KAAOyB,EAAQ3B,MAAQ2B,EAAQ1B,QAAUF,WAIpJ,yBAAKkB,UAAU,iBACX,+BACI,+BACA,4BACI,oCACA,uCAGJ,+BACKgB,KAMrB,SAASG,EAAmBhC,GACxB,OACI,4BACI,wBAAIoC,QAAQ,KAAKpC,EAAMiC,eAInC,SAASE,EAAWnC,GAChB,OACQ,wBAAIa,UAAW,WAAab,EAAMH,QAAQwC,YACtC,4BAAKrC,EAAMF,MACX,4BAAKE,EAAMJ,Q,IAcZ0C,E,uKARP,OACI,6BACI,wBAAIzB,UAAU,kBAAd,qBACA,kBAAC,EAAD,W,GALEK,IAAMC,WCxFlBmB,E,uKAEE,OACI,6BAWI,kBAACC,EAAD,W,GAdErB,IAAMC,WAoBxBqB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.ad5245e7.chunk.js","sourcesContent":["import React from 'react';\nimport './styles.css';\n\nconst products = [\n    {category: \"Sporting Goods\", price: \"$49.99\", stocked: true, name: \"Football\"},\n    {category: \"Sporting Goods\", price: \"$9.99\", stocked: true, name: \"Baseball\"},\n    {category: \"Sporting Goods\", price: \"$29.99\", stocked: false, name: \"Basketball\"},\n    {category: \"Electronics\", price: \"$99.99\", stocked: true, name: \"iPod Touch\"},\n    {category: \"Electronics\", price: \"$399.99\", stocked: false, name: \"iPhone 5\"},\n    {category: \"Electronics\", price: \"$199.99\", stocked: true, name: \"Nexus 7\"}\n];\nclass FilterableProductTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchValue: \"\",\n            filterValue: false,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(e) {\n        let { name, value, type } = e.target;\n        value = type === \"checkbox\" ? e.target.checked : value;\n        this.setState({\n            [name]: value,\n        });\n    }\n    render() {\n        return(\n            <div className=\"filterable-product-table\">\n                <SearchBar onChange={this.handleChange} searchValue={this.state.searchValue} checkboxValue={this.state.filterValue} />\n                <ProductTable products={products} searchValue={this.state.searchValue} checkboxValue={this.state.filterValue} />\n            </div>\n        );\n    }\n\n}\nfunction SearchBar(props) {\n    return(\n        <div className=\"search-bar\">\n            <input name=\"searchValue\" type=\"text\" placeholder=\"Search...\" onChange={props.onChange}/>\n            <div className=\"checkbox-elem\">\n                <input name=\"filterValue\" type=\"checkbox\" checked={props.checkboxValue} onChange={props.onChange} />\n                <span>Only show products in stock</span>\n            </div>\n        </div>\n    );\n}\nfunction ProductTable(props) {\n    // Do something here\n    const searchValue = props.searchValue;\n    const filterValue = props.checkboxValue;\n    const products = props.products;\n    const searchAndFilterProducts = products.filter(product => {\n        if (filterValue) {\n            return product.name.toLowerCase().search(searchValue.toLowerCase()) !== -1 && product.stocked;\n        }\n        return product.name.toLowerCase().search(searchValue.toLowerCase()) !== -1;\n    });\n    // get distinct categories array\n    const categories = [...new Set(searchAndFilterProducts.map(product => {\n        return product.category;\n    }))];\n    const rows = [];\n    categories.forEach(category => {\n        rows.push(<ProductCategoryRow categoryName={category} key={category} />);\n        const arr = searchAndFilterProducts.filter(product => product.category === category);\n        arr.forEach(product => {\n            rows.push(<ProductRow name={product.name} price={product.price} stocked={product.stocked} key={product.name + product.price + product.stocked + category} />);\n        });\n    });\n    return(\n        <div className=\"product-table\">\n            <table>\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Price</th>\n                </tr>\n                </thead>\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        </div>\n    );\n}\nfunction ProductCategoryRow(props) {\n    return(\n        <tr>\n            <th colSpan=\"2\">{props.categoryName}</th>\n        </tr>\n    );\n}\nfunction ProductRow(props) {\n    return(\n            <tr className={\"stocked-\" + props.stocked.toString()}>\n                <td>{props.name}</td>\n                <td>{props.price}</td>\n            </tr>\n    );\n}\nclass App extends React.Component {\n    render() {\n        return(\n            <div>\n                <h1 className=\"learning-topic\">Thinking In React</h1>\n                <FilterableProductTable />\n            </div>\n        );\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import IntroducingJSX from './components/IntroducintJSX';\n// import RenderingElements from './components/RenderingElements';\n// import ComponentsAndProps from './components/ComponentsAndProps';\n// import StateAndLifecycle from './components/StateAndLifecycle';\n// import HandlingEvents from './components/HandlingEvents';\n// import ConditionalRendering from './components/ConditionalRendering';\n// import ListsAndKeys from './components/ListsAndKeys';\n// import Forms from './components/Forms';\n// import LiftingStateUp from './components/LiftingStateUp';\n// import CompositionVsInheritance from './components/CompositionVsInheritance';\nimport ThinkingInReact from './components/ThinkingInReact';\n\nclass App extends React.Component {\n    render() {\n        return(\n            <div>\n                {/* <IntroducingJSX />\n                <RenderingElements time={new Date().toLocaleTimeString()} />\n                <ComponentsAndProps />\n                <StateAndLifecycle />\n                <HandlingEvents />\n                <ConditionalRendering />\n                <ListsAndKeys />\n                <Forms />\n                <LiftingStateUp />\n                <CompositionVsInheritance /> */}\n                <ThinkingInReact />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);\n\n// ----- Update time \n// setInterval(() => {\n//     ReactDOM.render(\n//         <App />,\n//         document.getElementById(\"root\")\n//     );\n// }, 1000);"],"sourceRoot":""}